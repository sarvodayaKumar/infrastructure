name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:  # Allows manual triggering

env:
  IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/my-app
  K8S_DEPLOYMENT: my-app

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 12.22.12

      - name: Install Dependencies
        run: npm install

      - name: Run Tests
        run: npm test

  docker-build-push:
    needs: build-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Build Docker Image
        run: |
          docker build -t ${{ env.IMAGE_NAME }}:${{ github.sha }} .

      - name: Push Docker Image to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker push ${{ env.IMAGE_NAME }}:${{ github.sha }}

  deploy:
    needs: docker-build-push
    runs-on: ubuntu-latest
    steps:
      - name: Set up kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      - name: Configure Kubernetes Cluster (Minikube)
        run: |
          curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          sudo install minikube-linux-amd64 /usr/local/bin/minikube
          minikube start
          kubectl cluster-info

      - name: Apply Kubernetes Manifests
        run: |
          kubectl apply -f deployment.yaml
          kubectl apply -f service.yaml

      - name: Update Image in Kubernetes
        run: |
          kubectl set image deployment/${{ env.K8S_DEPLOYMENT }} my-app=${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: Health Check
        run: |
          kubectl rollout status deployment/${{ env.K8S_DEPLOYMENT }} || exit 1

      - name: Rollback on Failure
        if: failure()
        run: |
          echo "Deployment failed! Rolling back..."
          kubectl rollout undo deployment/${{ env.K8S_DEPLOYMENT }}
